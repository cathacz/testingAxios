{"version":3,"sources":["components/Loading.js","components/Country.js","App.js","index.js"],"names":["Loading","Fragment","Country","result","getCountry","land","map","obj","i","console","log","name","flag","capital","region","area","population","borders","className","src","alt","Intl","NumberFormat","format","border","onClick","App","useState","userInput","setUserInput","setResult","loading","setLoading","useEffect","setTimeout","onSubmit","e","preventDefault","textToURl","encodeURIComponent","endPoint","axios","then","data","catch","error","type","value","onChange","target","placeholder","status","countryName","err","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAUeA,EARC,WACd,OACE,eAAC,IAAMC,SAAP,WACE,8CACA,gDC4BSC,EAhCC,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WACnBC,EAAOF,EAAOG,KAAI,SAACC,EAAKC,GAC5BC,QAAQC,IAAIH,GACZ,IAAQI,EAA2DJ,EAA3DI,KAAMC,EAAqDL,EAArDK,KAAMC,EAA+CN,EAA/CM,QAASC,EAAsCP,EAAtCO,OAAQC,EAA8BR,EAA9BQ,KAAMC,EAAwBT,EAAxBS,WAAYC,EAAYV,EAAZU,QACvD,OACE,sBAAKC,UAAU,UAAf,UACE,6BAAKP,IACL,6BAAKE,IACL,qBAAKK,UAAU,OAAOC,IAAKP,EAAMQ,IAAI,iBACrC,gCACE,yCADF,IACmBN,KAEnB,gCACE,uCADF,IACiB,IAAIO,KAAKC,aAAa,SAASC,OAAOR,GADvD,aAGA,gCACE,6CAAoB,IACnB,IAAIM,KAAKC,aAAa,SAASC,OAAOP,MAEzC,gCACE,yCACCC,EAAQX,KAAI,SAACkB,EAAQhB,GAAT,OACX,oBAAWiB,QAAS,kBAAMrB,EAAWoB,IAArC,sBACgBA,IADRhB,WAjBgBA,MAyBlC,OAAO,cAAC,IAAMP,SAAP,UAAiBI,KC+BXqB,EA1DH,WACV,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4BF,mBAAS,IAArC,mBAAOxB,EAAP,KAAe2B,EAAf,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACRC,YAAW,WACTF,GAAW,KACV,OACF,IA6BH,OAAID,EAAgB,cAAC,EAAD,IAGlB,cAAC,IAAM9B,SAAP,UACE,sBAAKiB,UAAU,OAAf,UACE,qDACA,uBAAMiB,SAlBZ,SAAsBC,GACpBA,EAAEC,iBACF,IAAIC,EAAYC,mBAAmBX,GAC/BY,EAAQ,gDAA4CF,GAKxDG,IAAMD,GACHE,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcb,EAAUa,MAC7BC,MAAMnC,QAAQoC,MAAR,iDAQL,UACE,uBACEC,KAAK,OACLC,MAAOnB,EACPoB,SAzBV,SAAsBZ,GACpBP,EAAaO,EAAEa,OAAOF,QAyBdG,YAAY,aAEd,wBAAQJ,KAAK,SAAb,uBAEF,cAAC,EAAD,CAAS3C,OAAQA,EAAQC,WA1CZ,SAAC+C,EAAQC,GACVb,mBAAmBa,GAAnC,IACIZ,EAAQ,gDAA4CW,EAA5C,KAMZV,IAAMD,GACHE,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcb,EAAUa,MAC7BC,OAAM,SAACS,GAAD,OAAS5C,QAAQC,IAAR,sBAA2B2C,gBCtBjDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e70842fd.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Loading = () => {\n  return (\n    <React.Fragment>\n      <h4>ðŸ•¸</h4>\n      <h6>Loading...</h6>\n    </React.Fragment>\n  );\n};\nexport default Loading;\n","import React from \"react\";\n\nconst Country = ({ result, getCountry }) => {\n  const land = result.map((obj, i) => {\n    console.log(obj);\n    const { name, flag, capital, region, area, population, borders } = obj;\n    return (\n      <div className=\"country\" key={i}>\n        <h2>{name}</h2>\n        <h3>{capital}</h3>\n        <img className=\"flag\" src={flag} alt=\"country flag\" />\n        <div>\n          <b>Region: </b> {region}\n        </div>\n        <div>\n          <b>Area: </b> {new Intl.NumberFormat(\"de-DE\").format(area)} kmÂ²\n        </div>\n        <div>\n          <b>Population: </b>{\" \"}\n          {new Intl.NumberFormat(\"de-DE\").format(population)}\n        </div>\n        <div>\n          <b>Borders:</b>\n          {borders.map((border, i) => (\n            <i key={i} onClick={() => getCountry(border)}>\n              &nbsp;&nbsp; {border}\n            </i>\n          ))}\n        </div>\n      </div>\n    );\n  });\n  return <React.Fragment>{land}</React.Fragment>;\n};\nexport default Country;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./sass/main.scss\";\nimport Loading from \"./components/Loading\";\nimport Country from \"./components/Country\";\nconst App = () => {\n  const [userInput, setUserInput] = useState(\"\");\n  const [result, setResult] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n\n  const getCountry = (status, countryName) => {\n    let textToUrl = encodeURIComponent(countryName);\n    let endPoint = `https://restcountries.eu/rest/v2/name/${status}/`;\n\n    // fetch(endPoint)\n    // .then((res)=> res.json())\n    // .then((data)=>setResults(data))\n\n    axios(endPoint)\n      .then(({ data }) => setResult(data))\n      .catch((err) => console.log(`Your had an ${err}`));\n  };\n  function handleChange(e) {\n    setUserInput(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    let textToURl = encodeURIComponent(userInput);\n    let endPoint = `https://restcountries.eu/rest/v2/name/${textToURl}`;\n\n    // old school fetch: (much more then axios)\n    // fetch(endPoint).then((res)=>res.json()).then((data)=>setResult(data));\n\n    axios(endPoint)\n      .then(({ data }) => setResult(data))\n      .catch(console.error(`Nope â€“ you took a wrong turn somewhere`));\n  }\n  if (loading) return <Loading />;\n\n  return (\n    <React.Fragment>\n      <div className=\"main\">\n        <h1>Know your Countries</h1>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={userInput}\n            onChange={handleChange}\n            placeholder=\"country?\"\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n        <Country result={result} getCountry={getCountry} />\n      </div>\n    </React.Fragment>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}