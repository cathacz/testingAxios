{"version":3,"sources":["components/Country.js","App.js","index.js"],"names":["Country","result","getCountry","console","log","land","map","obj","i","name","flag","capital","region","area","population","borders","className","src","alt","Intl","NumberFormat","format","border","onClick","Fragment","App","useState","userInput","setUserInput","setResult","onSubmit","e","preventDefault","textToURl","encodeURIComponent","endPoint","axios","then","data","catch","error","type","value","onChange","target","placeholder","code","toLowerCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAoCeA,EAlCC,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WACzBC,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GACZ,IAAMG,EAAOJ,EAAOK,KAAI,SAACC,EAAKC,GAC5BL,QAAQC,IAAIG,GACZ,IAAQE,EAA2DF,EAA3DE,KAAMC,EAAqDH,EAArDG,KAAMC,EAA+CJ,EAA/CI,QAASC,EAAsCL,EAAtCK,OAAQC,EAA8BN,EAA9BM,KAAMC,EAAwBP,EAAxBO,WAAYC,EAAYR,EAAZQ,QACvD,OACE,sBAAKC,UAAU,UAAf,UACE,6BAAKP,IACL,6BAAKE,IACL,qBAAKK,UAAU,OAAOC,IAAKP,EAAMQ,IAAI,iBACrC,gCACE,yCADF,IACmBN,KAEnB,gCACE,uCADF,IACiB,IAAIO,KAAKC,aAAa,SAASC,OAAOR,GADvD,aAGA,gCACE,6CAAoB,IACnB,IAAIM,KAAKC,aAAa,SAASC,OAAOP,MAEzC,gCACE,yCACCC,EAAQT,KAAI,SAACgB,EAAQd,GAAT,OACX,oBAAWe,QAAS,kBAAMrB,EAAWoB,IAArC,sBACgBA,IADRd,WAjBgBA,MAyBlC,OAAO,cAAC,IAAMgB,SAAP,UAAiBnB,KC8BXoB,EA3DH,WACV,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4BF,mBAAS,IAArC,mBAAOzB,EAAP,KAAe4B,EAAf,KAuCA,OACE,cAAC,IAAML,SAAP,UACE,sBAAKR,UAAU,OAAf,UACE,qDACA,uBAAMc,SAlBZ,SAAsBC,GACpBA,EAAEC,iBACF,IAAIC,EAAYC,mBAAmBP,GAC/BQ,EAAQ,gDAA4CF,GAKxDG,IAAMD,GACHE,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcT,EAAUS,MAC7BC,MAAMpC,QAAQqC,MAAR,iDAQL,UACE,uBACEC,KAAK,OACLC,MAAOf,EACPgB,SAzBV,SAAsBZ,GACpBH,EAAaG,EAAEa,OAAOF,QAyBdG,YAAY,aAEd,wBAAQJ,KAAK,SAAb,uBAEF,cAAC,EAAD,CAASxC,OAAQA,EAAQC,WA3CZ,SAAC4C,GAElB,IAAIX,EAAQ,gDAA4CW,EAA5C,KACZ3C,QAAQC,IAAI0C,EAAKC,eAMjBX,IAAMD,GACHE,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcT,EAAUS,MAC7BC,MAAMpC,QAAQqC,MAAR,sDAAwDM,cCvBrEE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a0e61848.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Country = ({ result, getCountry }) => {\n  console.log(result);\n  console.log(getCountry);\n  const land = result.map((obj, i) => {\n    console.log(obj);\n    const { name, flag, capital, region, area, population, borders } = obj;\n    return (\n      <div className=\"country\" key={i}>\n        <h2>{name}</h2>\n        <h3>{capital}</h3>\n        <img className=\"flag\" src={flag} alt=\"country flag\" />\n        <div>\n          <b>Region: </b> {region}\n        </div>\n        <div>\n          <b>Area: </b> {new Intl.NumberFormat(\"de-DE\").format(area)} km²\n        </div>\n        <div>\n          <b>Population: </b>{\" \"}\n          {new Intl.NumberFormat(\"de-DE\").format(population)}\n        </div>\n        <div>\n          <b>Borders:</b>\n          {borders.map((border, i) => (\n            <i key={i} onClick={() => getCountry(border)}>\n              &nbsp;&nbsp; {border}\n            </i>\n          ))}\n        </div>\n      </div>\n    );\n  });\n  return <React.Fragment>{land}</React.Fragment>;\n};\nexport default Country;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./sass/main.scss\";\n// import Loading from \"./components/Loading\";\nimport Country from \"./components/Country\";\nconst App = () => {\n  const [userInput, setUserInput] = useState(\"\");\n  const [result, setResult] = useState([]);\n  // const [loading, setLoading] = useState(true);\n\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     setLoading(false);\n  //   }, 1000);\n  // }, []);\n\n  const getCountry = (code) => {\n    // let textToUrl = encodeURIComponent(countryName);\n    let endPoint = `https://restcountries.eu/rest/v2/name/${code}/`; //this is the correct line to get the country by code but it will give me the error that in Country.js \"result.map\" in line 6 is NOT a freaking function, BUT if I set the url part to .../name/${code} I get the seyshells next to austria...\n    console.log(code.toLowerCase());\n\n    // fetch(endPoint)\n    // .then((res)=> res.json())\n    // .then((data)=>setResults(data))\n\n    axios(endPoint)\n      .then(({ data }) => setResult(data))\n      .catch(console.error(`Nope – you took a wrong turn somewhere ${code}`));\n  };\n  function handleChange(e) {\n    setUserInput(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    let textToURl = encodeURIComponent(userInput);\n    let endPoint = `https://restcountries.eu/rest/v2/name/${textToURl}`;\n\n    // old school fetch: (much more then axios)\n    // fetch(endPoint).then((res)=>res.json()).then((data)=>setResult(data));\n\n    axios(endPoint)\n      .then(({ data }) => setResult(data))\n      .catch(console.error(`Nope – you took a wrong turn somewhere`));\n  }\n  // if (loading) return <Loading />;\n\n  return (\n    <React.Fragment>\n      <div className=\"main\">\n        <h1>Know your Countries</h1>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={userInput}\n            onChange={handleChange}\n            placeholder=\"country?\"\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n        <Country result={result} getCountry={getCountry} />\n      </div>\n    </React.Fragment>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}